# Generated by Django 5.0.6 on 2024-05-22 00:07

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.TextField()),
                ('biography', models.TextField()),
                ('userFK', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='CustomUserAuthor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('image', models.TextField()),
                ('description', models.TextField()),
                ('pages', models.IntegerField()),
                ('platform', models.CharField(choices=[('EBOOK', 'EBOOK'), ('FÍSICO', 'FÍSICO')], max_length=60)),
                ('edition', models.CharField(max_length=120)),
                ('publish_year', models.DateField()),
                ('rating', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('APROVADO', 'APROVADO'), ('PENDENTE', 'PENDENTE'), ('CANCELADO', 'CANCELADO')], max_length=50)),
                ('qntInStock', models.IntegerField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorBook', to='app.author')),
                ('categoryFK', models.ManyToManyField(related_name='BookCategories', to='app.category')),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loanDate', models.DateField(auto_now_add=True)),
                ('expectedDate', models.DateField(blank=True, null=True)),
                ('deliverDate', models.DateField(blank=True, null=True)),
                ('bookFK', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookLoan', to='app.book')),
                ('userFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userLoan', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.TextField()),
                ('biography', models.TextField()),
                ('relationFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RelationFK', to='app.relation')),
            ],
        ),
    ]
